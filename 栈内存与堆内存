/* 栈内存 stack memory 
*  堆内存 heap memory
*/  
    当一个方法执行时，每个方法都会建立自己的内存栈，在这个方法内定义的变量将会逐个放入这块栈内存里，随着方法的执行结束，
这个方法的内存栈也将自然销毁。因此，所有【在方法中定义的局部变量都是放在栈内存中】的；在程序中【创建一个对象】时，这个对象将被
保存到运行时数据区中，以便反复利用（因为对象的创建成本通常较大），这个运行时数据区就是【堆内存】。堆内存中的对象不会随方法
的结束而销毁，即使方法结束后，这个对象不会随方法的结束而销毁，即使方法结束后，这个对象还可能被另一个引用变量所引用（在
方法的参数传递时很常见），此时这个对象依然不会被销毁。只有当一个对象没有任何引用变量引用它时，系统的垃圾回收器才会在合适
的时候回收它。
