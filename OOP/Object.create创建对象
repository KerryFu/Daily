// 创建obj1继承{x:1,y:2}
var obj1 = Object.create({x:1,y:2});

// 创建空对象，和new Object() 、{}一样
var obj = Object.create(Object.prototype)

 
/*
* 封装通过原型继承 创建新对象
* 将继承对象传入函数，读取的属性是继承来的，不影响原始对象
****/ 


function inherit(obj){
  if(obj == null) throw TypeError('obj不能是null');
  if(Object.create){
    return Object.create(obj);
  }
  var kind = typeof obj;
  if(kind != 'Object' || kind != "Function"){
    var F = function(){};
    F.prototype = obj;
    return new F()
  }
}

console.log(inherit({x:1,y:1}))