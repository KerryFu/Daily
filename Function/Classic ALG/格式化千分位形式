// 数字千分位形式，即从个位数起，每三位之间加一个逗号。例如“10,000,000”

/*
* demo1 
* 转字符串，再转为数组
* 再从末尾开始，逐个把数组中的元素插入到新数组（result）的开头
* 插入一个元素，counter就计一次数（加1），当counter为3的倍数时，就插入一个逗号，但是要注意* 开头（i为0时）不需要逗号
*/ 
function toThousands(num) {
    var result = [], counter = 0;
    num = (num || 0).toString().split('');
    for (var i = num.length - 1; i >= 0; i--) {
        counter++;
        result.unshift(num[i]);
        if (!(counter % 3) && i != 0) { result.unshift(','); }
    }
    return result.join('');
}

// demo2 直接操作字符串
function toThousands(num) {
	console.time('demo2')
    var num = (num || 0).toString(), result = '';
    while (num.length > 3) {
        result = ',' + num.slice(-3) + result;
        num = num.slice(0, num.length - 3);
    }
    if (num) { result = num + result; }
    console.timeEnd('demo2')
    return result;
}


// demo3 
function toThousands(num) {
    return (num || 0).toString().replace(/(\d)(?=(?:\d{3})+$)/g, '$1,');
}

/*
* demo2操作字符串比操作数组效率高，且demo2比demo3效率高，
* 代码长短跟性能高低没有关系
*/ 